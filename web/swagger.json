{
  "openapi": "3.0.3",
  "info": {
    "title": "Nightell APIs",
    "description": "Nightell OpenAPI (Swagger) Documentation",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://nightell.neatplex.com/api/v1"
    }
  ],
  "paths": {
    "/auth/otp/email/generate": {
      "post": {
        "description": "Generate OTP in order to sign up/in",
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "i@miladrahimi.com"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The OTP generated and mailed successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ttl": {
                      "type": "integer",
                      "default": "300",
                      "description": "TTL (time to live) is number of seconds that otp is valid"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/otp/email/submit": {
      "post": {
        "description": "Submit OTP received by Email",
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "otp"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "i@miladrahimi.com"
                  },
                  "otp": {
                    "type": "string",
                    "example": "012345",
                    "description": "The OTP received by email"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The Signed in/up user and auth token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "$ref": "#/components/schemas/User"
                    },
                    "token": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/sign-up": {
      "post": {
        "description": "Sign up new user and get the user details and authentication token",
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewUser"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The user signed up successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "$ref": "#/components/schemas/User"
                    },
                    "token": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/sign-in/email": {
      "post": {
        "description": "Sign in by email and get the user details and authentication token",
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "i@miladrahimi.com"
                  },
                  "password": {
                    "type": "string",
                    "maxLength": 8
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The user signed in successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "$ref": "#/components/schemas/User"
                    },
                    "token": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/sign-in/username": {
      "post": {
        "description": "Sign in by username and get the user details and authentication token",
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "username",
                  "password"
                ],
                "properties": {
                  "username": {
                    "type": "string",
                    "example": "milad93x"
                  },
                  "password": {
                    "type": "string",
                    "maxLength": 8
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The user signed in successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "$ref": "#/components/schemas/User"
                    },
                    "token": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/sign-in/google": {
      "post": {
        "description": "Sign in or sign up by Google and get the user details and authentication token",
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "google_token"
                ],
                "properties": {
                  "google_token": {
                    "type": "string",
                    "example": "abc.123.xyz",
                    "description": "The JWT received from Google"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The user signed in successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "$ref": "#/components/schemas/User"
                    },
                    "token": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/profile": {
      "description": "Get the authenticated user profile",
      "get": {
        "tags": [
          "Profile"
        ],
        "responses": {
          "200": {
            "description": "The authenticated user profile",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "$ref": "#/components/schemas/User"
                    },
                    "followers_count": {
                      "type": "integer",
                      "example": 666
                    },
                    "followings_count": {
                      "type": "integer",
                      "example": 666
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Profile"
        ],
        "responses": {
          "204": {
            "description": "User account deleted"
          }
        }
      }
    },
    "/profile/name": {
      "patch": {
        "description": "Update name of the authenticated user",
        "tags": [
          "Profile"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Milad"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The name updated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/profile/bio": {
      "patch": {
        "description": "Update biography of the authenticated user",
        "tags": [
          "Profile"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "bio"
                ],
                "properties": {
                  "bio": {
                    "type": "string",
                    "example": "I am so funny!"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The name updated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/profile/username": {
      "patch": {
        "description": "Update username of the authenticated user",
        "tags": [
          "Profile"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "username"
                ],
                "properties": {
                  "username": {
                    "type": "string",
                    "example": "milad_rahimi"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The name updated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/profile/image": {
      "patch": {
        "description": "Update image (photo) of the authenticated user ",
        "tags": [
          "Profile"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "image_id"
                ],
                "properties": {
                  "image_id": {
                    "type": "integer",
                    "nullable": true,
                    "example": 13,
                    "description": "Unique id of the image file (uint64)"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The image updated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/files": {
      "post": {
        "description": "Store (upload) a new file",
        "tags": [
          "Files"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "extension",
                  "file"
                ],
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "description": "File to upload"
                  },
                  "extension": {
                    "$ref": "#/components/schemas/Extension"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The file uploaded.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "file": {
                      "$ref": "#/components/schemas/File"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}": {
      "get": {
        "description": "Show the user details",
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "The user details",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "$ref": "#/components/schemas/User"
                    },
                    "followers_count": {
                      "type": "integer",
                      "example": 666
                    },
                    "followings_count": {
                      "type": "integer",
                      "example": 666
                    },
                    "followed_by_me": {
                      "type": "boolean",
                      "description": "True if user is followed by me"
                    },
                    "follows_me": {
                      "type": "boolean",
                      "description": "True if user follows me"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}/followers": {
      "get": {
        "description": "Get followers of the user",
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "List of followers of the user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "posts": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/User"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Store myself as a new follower for the user",
        "tags": [
          "Users"
        ],
        "responses": {
          "201": {
            "description": "The new relation created."
          }
        }
      },
      "delete": {
        "description": "Delete myself as a follower from the list of followers",
        "tags": [
          "Users"
        ],
        "responses": {
          "201": {
            "description": "The relation deleted."
          }
        }
      }
    },
    "/users/{userId}/followings": {
      "get": {
        "description": "Get followings of the user",
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "List of followings of the user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "posts": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/User"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}/posts": {
      "get": {
        "description": "Index the user posts",
        "tags": [
          "Posts"
        ],
        "responses": {
          "200": {
            "description": "List of user posts",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "posts": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Post"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/posts": {
      "post": {
        "description": "Store a new post for the authenticated user",
        "tags": [
          "Posts"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewPost"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The new post created.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "post": {
                      "$ref": "#/components/schemas/Post"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/posts/{postId}": {
      "get": {
        "description": "Get the post",
        "tags": [
          "Posts"
        ],
        "responses": {
          "201": {
            "description": "The post.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "post": {
                      "$ref": "#/components/schemas/Post"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "description": "Update the post fields",
        "tags": [
          "Posts"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "example": "Blind Owl",
                    "description": "The post title"
                  },
                  "description": {
                    "type": "string",
                    "example": "This is my first post! #first_post",
                    "description": "The post description"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The post updated.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "post": {
                      "$ref": "#/components/schemas/Post"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "Delete the post",
        "tags": [
          "Posts"
        ],
        "responses": {
          "204": {
            "description": "The post deleted."
          }
        }
      }
    },
    "/posts/{postId}/likes": {
      "get": {
        "description": "Index the post likes",
        "tags": [
          "Likes"
        ],
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Number of likes to retrieve",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 5,
              "default": 10
            }
          },
          {
            "name": "lastId",
            "in": "query",
            "description": "ID of the last like retrieved",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 13
            }
          }
        ],
        "responses": {
          "200": {
            "description": "list of the likes of a post",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "likes": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Like"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "likes-store",
        "description": "Store a new like action",
        "tags": [
          "Likes"
        ],
        "responses": {
          "201": {
            "description": "The new like action created."
          }
        }
      }
    },
    "/likes/{likeId}": {
      "delete": {
        "description": "Delete the like",
        "tags": [
          "Likes"
        ],
        "responses": {
          "201": {
            "description": "The post deleted."
          },
          "403": {
            "description": "You do not have permission to perform this action."
          },
          "default": {
            "description": "Error!",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/posts/{postId}/comments": {
      "get": {
        "description": "Index the post comments",
        "tags": [
          "Comments"
        ],
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Number of comments to retrieve",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 5,
              "default": 10
            }
          },
          {
            "name": "lastId",
            "in": "query",
            "description": "ID of the last comment retrieved",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 13
            }
          }
        ],
        "responses": {
          "200": {
            "description": "list of the comments of a post",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "comments": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Comment"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/comments": {
      "get": {
        "description": "Index the user comments",
        "tags": [
          "Comments"
        ],
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Number of comments to retrieve",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 5,
              "default": 10
            }
          },
          {
            "name": "lastId",
            "in": "query",
            "description": "ID of the last comment retrieved",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 13
            }
          }
        ],
        "responses": {
          "200": {
            "description": "list of the comments of a post",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "comments": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Comment"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "comments-store",
        "description": "Store a new comment",
        "tags": [
          "Comments"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewComment"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The new comment created."
          }
        }
      }
    },
    "/comments/{commentId}": {
      "delete": {
        "description": "Delete the comment",
        "tags": [
          "Comments"
        ],
        "responses": {
          "204": {
            "description": "The comment deleted."
          },
          "404": {
            "description": "The comment not found."
          }
        }
      }
    },
    "/search/posts": {
      "get": {
        "description": "Search posts",
        "tags": [
          "Search"
        ],
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "Query",
            "required": true,
            "schema": {
              "type": "string",
              "example": "pink floyd"
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "Number of results to retrieve",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 5,
              "default": 10
            }
          },
          {
            "name": "lastId",
            "in": "query",
            "description": "ID of the last result retrieved",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 13
            }
          }
        ],
        "responses": {
          "200": {
            "description": "list of results",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "posts": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Post"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/search/users": {
      "get": {
        "description": "Search users",
        "tags": [
          "Search"
        ],
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "Query",
            "required": true,
            "schema": {
              "type": "string",
              "example": "Bon Jovi"
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "Number of results to retrieve",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 5,
              "default": 10
            }
          },
          {
            "name": "lastId",
            "in": "query",
            "description": "ID of the last result retrieved",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 13
            }
          }
        ],
        "responses": {
          "200": {
            "description": "list of results",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "users": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/User"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/feed": {
      "get": {
        "description": "Index the feed posts",
        "tags": [
          "Feed"
        ],
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "Number of posts to retrieve",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 5,
              "default": 10
            }
          },
          {
            "name": "lastId",
            "in": "query",
            "description": "ID of the last post retrieved",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 13
            }
          }
        ],
        "responses": {
          "200": {
            "description": "list of posts in user's feed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "posts": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Post"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "parameters": {
      "accept": {
        "in": "header",
        "name": "Accept",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "application/json"
          ]
        },
        "example": "application/json"
      }
    },
    "schemas": {
      "User": {
        "allOf": [
          {
            "$ref": "#/components/schemas/NewUser"
          },
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "example": 13,
                "description": "Unique id of user (uint64)"
              },
              "name": {
                "type": "string",
                "example": "Milad",
                "description": "The user's name (full name or nickname)"
              },
              "username": {
                "type": "string",
                "example": "username_1691_4b3a_847f_76b2ed0f00ec",
                "description": "Unique username (English letters, numbers and underscores)"
              },
              "bio": {
                "type": "string",
                "example": "I am so funny!",
                "description": "User biography (description)"
              },
              "is_banned": {
                "type": "boolean",
                "example": false,
                "description": "Whether the user has been banned or not."
              },
              "image": {
                "$ref": "#/components/schemas/File"
              },
              "image_id": {
                "type": "integer",
                "nullable": true,
                "example": 13,
                "description": "Unique id of the image file (uint64)"
              },
              "created_at": {
                "type": "string",
                "example": "2023-11-28T13:36:30.956Z",
                "description": "Registration time"
              }
            }
          }
        ]
      },
      "File": {
        "type": "object",
        "description": "Uploaded audio or image file",
        "properties": {
          "id": {
            "type": "integer",
            "example": 13,
            "description": "Unique id of file (uint64)"
          },
          "user_id": {
            "type": "integer",
            "example": 13,
            "description": "Unique id of file (uint64)"
          },
          "path": {
            "type": "string",
            "example": "2023/12/22/audio_1691_4b3a_847f_76b2ed0f00ec.mp3",
            "description": "File path in server storage"
          },
          "extension": {
            "$ref": "#/components/schemas/Extension"
          }
        }
      },
      "Extension": {
        "type": "string",
        "enum": [
          "MP3",
          "JPG"
        ],
        "example": "MP3",
        "description": "File extension"
      },
      "Like": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 13,
            "description": "Unique id (uint64)"
          },
          "user_id": {
            "type": "integer",
            "example": 13,
            "description": "Unique id of user (uint64)"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "created_at": {
            "type": "string",
            "example": "2023-11-28T13:36:30.956Z",
            "description": "Registration time"
          }
        }
      },
      "Comment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/NewPost"
          },
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "example": 13,
                "description": "Unique id (uint64)"
              },
              "user": {
                "$ref": "#/components/schemas/User"
              },
              "post": {
                "$ref": "#/components/schemas/Post"
              },
              "created_at": {
                "type": "string",
                "example": "2023-11-28T13:36:30.956Z",
                "description": "Registration time"
              }
            }
          }
        ]
      },
      "Post": {
        "allOf": [
          {
            "$ref": "#/components/schemas/NewPost"
          },
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "example": 13,
                "description": "Unique id of post (uint64)"
              },
              "image": {
                "$ref": "#/components/schemas/File"
              },
              "audio": {
                "$ref": "#/components/schemas/File"
              },
              "user_id": {
                "type": "integer",
                "example": 13,
                "description": "Unique id of user (uint64)"
              },
              "user": {
                "$ref": "#/components/schemas/User"
              },
              "likes": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Like"
                }
              },
              "likes_count": {
                "type": "integer",
                "example": 0,
                "description": "Numbers of likes"
              },
              "comments_count": {
                "type": "integer",
                "example": 0,
                "description": "Numbers of comments"
              },
              "created_at": {
                "type": "string",
                "example": "2023-11-28T13:36:30.956Z",
                "description": "Registration time"
              }
            }
          }
        ]
      },
      "NewPost": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "example": "Blind Owl",
            "description": "The post title"
          },
          "description": {
            "type": "string",
            "example": "This is my first post! #first_post",
            "description": "The post description (content)"
          },
          "audio_id": {
            "type": "integer",
            "example": 13,
            "description": "Unique id of the audio file (uint64)"
          },
          "image_id": {
            "type": "integer",
            "nullable": true,
            "example": 13,
            "description": "Unique id of the image file (uint64)"
          }
        }
      },
      "NewUser": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "example": "milad93x",
            "description": "User unique username (Regex: ^[a-z0-9_]+$)"
          },
          "email": {
            "type": "string",
            "example": "i@miladrahimi.com",
            "description": "User email address (unique)"
          },
          "password": {
            "type": "string",
            "example": "Secret69",
            "minLength": 8,
            "description": "User password (between 8 and 128 characters)"
          }
        }
      },
      "NewComment": {
        "type": "object",
        "properties": {
          "user_id": {
            "type": "integer",
            "example": 13,
            "description": "Unique id of user (uint64)"
          },
          "post_id": {
            "type": "integer",
            "example": 13,
            "description": "Unique id of post (uint64)"
          },
          "text": {
            "type": "string",
            "example": "Wow! Nice...",
            "description": "The comment text"
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      }
    }
  }
}
